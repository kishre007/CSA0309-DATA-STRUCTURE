#include <stdio.h>
#define MAX 100
int stack[MAX];
int top = -1;
void push(int value) {
    stack[++top] = value;
}
int pop() {
    return stack[top--];
}
int evaluatePostfix(char exp[]) {
    int i, op1, op2, result;

    for (i = 0; exp[i] != '\0'; i++) {
        // Check if character is a digit (0-9)
        if (exp[i] >= '0' && exp[i] <= '9') {
            push(exp[i] - '0');  // convert char '5' to int 5
        }
        else {
            op2 = pop();
            op1 = pop();

            switch (exp[i]) {
                case '+': result = op1 + op2; break;
                case '-': result = op1 - op2; break;
                case '*': result = op1 * op2; break;
                case '/': result = op1 / op2; break;
                default:
                    printf("Invalid operator: %c\n", exp[i]);
                    return -1;
            }
            push(result);
        }
    }
    return pop();
}
int main() {
    char exp[100];
    printf("Enter a postfix expression: ");
    scanf("%s", exp);
    printf("Result of postfix evaluation: %d\n", evaluatePostfix(exp));
}
